<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tls="http://www.mulesoft.org/schema/mule/tls"
	xmlns:email="http://www.mulesoft.org/schema/mule/email" 
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" 
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core" 
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd 
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd 
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd">

	<flow name="businessLogicFlow" doc:id="5aa7011d-8abd-453d-9459-c7322838f14a">
		<salesforce:query config-ref="Salesforce_Sfdc_config"
			doc:name="Accounts from Salesforce instance" doc:id="fee8c43d-e435-46bf-b09c-0b0c02ec28f9">
			<salesforce:salesforce-query><![CDATA[SELECT AccountNumber, AccountSource,
				AnnualRevenue, BillingCity, BillingCountry, BillingPostalCode,
				BillingState, BillingStreet, Description, Fax, Industry,
				LastModifiedDate, Name, NumberOfEmployees, OwnerId, Ownership,
				ParentId, Phone, Rating, ShippingCity, ShippingCountry,
				ShippingPostalCode, ShippingState, ShippingStreet, Sic, SicDesc,
				Site, TickerSymbol, Type, Website FROM Account]]></salesforce:salesforce-query>
		</salesforce:query>
		<batch:job jobName="migrateAccountsBatch"
			doc:id="af55c5cf-807b-4582-9868-66f144b0a8e9">
			<batch:process-records>
				<batch:step name="getAccountInDatabaseStep" doc:id="b2f6d0eb-1dd2-4281-bd99-14cd169d9976">
					<db:select config-ref="Database_Config"
						doc:name="Select account from database by name" doc:id="ea180723-75eb-4fcd-84e0-d9877b28fa48"
						target="IdInB" targetValue="#[payload[0].Id]">
						<db:sql>SELECT Id FROM Account WHERE Name = :name</db:sql>
						<db:input-parameters><![CDATA[#[{'name' : payload.Name}]]]></db:input-parameters>
					</db:select>
					<ee:transform doc:name="Push Id of account from database to payload"
						doc:id="1d5b7cc2-9ddb-4b89-a8a1-609ed808e03a">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload ++ {IdInB: vars.IdInB}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
				</batch:step>
				<batch:step name="updateAccountsInDatabaseStep" doc:id="e1702a0d-b993-4a37-8116-8473a7c564e2"
					acceptExpression="payload.IdInB != null">
					<batch:aggregator doc:name="Batch Aggregator"
						doc:id="ca478779-cd13-4594-b0d1-30aee5a5cba2" size="${page.size}">
						<db:bulk-update config-ref="Database_Config"
							doc:name="Bulk update of accounts from database" doc:id="b4701ae7-61dd-41ab-b626-982f2417a351">
							<db:sql>UPDATE Account SET
								AccountNumber = :AccountNumber,
								AccountSource = :AccountSource,
								AnnualRevenue = :AnnualRevenue,
								BillingCity = :BillingCity,
								BillingCountry = :BillingCountry,
								BillingPostalCode = :BillingPostalCode,
								BillingState = :BillingState,
								BillingStreet = :BillingStreet,
								Description = :Description,
								Fax = :Fax,
								Industry = :Industry,
								LastModifiedDate = CURRENT_TIMESTAMP(),
								LastModifiedById = CURRENT_USER(),
								NumberOfEmployees = :NumberOfEmployees,
								Ownership = :Ownership,
								Phone = :Phone,
								Rating = :Rating,
								ShippingCity = :ShippingCity,
								ShippingCountry = :ShippingCountry,
								ShippingPostalCode = :ShippingPostalCode,
								ShippingState = :ShippingState,
								ShippingStreet = :ShippingStreet,
								Sic = :Sic,
								SicDesc = :SicDesc,
								Site = :Site,
								TickerSymbol = :TickerSymbol,
								Type = :Type,
								Website = :Website
								WHERE Id = :IdInB
							</db:sql>
						</db:bulk-update>
					</batch:aggregator>
				</batch:step>
				<batch:step name="insertAccountsToDatabaseStep" doc:id="0635642e-6535-4e67-a6e7-68e2b4a4b99f"
					acceptExpression="payload.IdInB == null">
					<batch:aggregator doc:name="Batch Aggregator"
						doc:id="86dd7c8e-c76c-4167-8c04-c633833b764a" size="${page.size}">
						<db:bulk-insert config-ref="Database_Config"
							doc:name="Bulk insert of accounts to database" doc:id="b87bbcfa-92c5-43ac-8351-ac3ee341450c">
							<db:sql>INSERT INTO Account (
								Id,
								AccountNumber,
								AccountSource,
								AnnualRevenue,
								BillingCity,
								BillingCountry,
								BillingPostalCode,
								BillingState,
								BillingStreet,
								Description,
								Fax,
								Industry,
								LastModifiedDate,
								LastModifiedById,
								Name,
								NumberOfEmployees,
								Ownership,
								Phone,
								Rating,
								ShippingCity,
								ShippingCountry,
								ShippingPostalCode,
								ShippingState,
								ShippingStreet,
								Sic,
								SicDesc,
								Site,
								TickerSymbol,
								Type,
								Website
								) VALUES (
								UUID(),
								:AccountNumber,
								:AccountSource,
								:AnnualRevenue,
								:BillingCity,
								:BillingCountry,
								:BillingPostalCode,
								:BillingState,
								:BillingStreet,
								:Description,
								:Fax,
								:Industry,
								CURRENT_TIMESTAMP(),
								CURRENT_USER(),
								:Name,
								:NumberOfEmployees,
								:Ownership,
								:Phone,
								:Rating,
								:ShippingCity,
								:ShippingCountry,
								:ShippingPostalCode,
								:ShippingState,
								:ShippingStreet,
								:Sic,
								:SicDesc,
								:Site,
								:TickerSymbol,
								:Type,
								:Website
								)
							</db:sql>
						</db:bulk-insert>
					</batch:aggregator>
				</batch:step>
			</batch:process-records>
			<batch:on-complete>
				<scatter-gather doc:name="Scatter-Gather" doc:id="ef2964ef-0b85-4c6c-a5ee-b834df639e7b">
			<route>
				<logger level="INFO" doc:name="Migration process has finished!" doc:id="b7575d38-7dbd-4602-9186-1bbb25234896" message="Migration process has finished!" />
			</route>
			<route>
				<ee:transform doc:name="Prepare migration result email" doc:id="c84b4bc4-5a65-41c1-9d0c-f1ebd3d8db7a">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output text/plain
---
"Migration Report: \n"
 
++ "\n Time [milliseconds]: " 		++ payload.elapsedTimeInMillis!
++ "\n Total Records: "				++ payload.totalRecords!
++ "\n Successful Records: "		++ payload.successfulRecords!
++ "\n Failed Records: "			++ payload.failedRecords!
++ "\n Loaded Records: "			++ payload.loadedRecords!
++ "\n Processed Records: " 		++ payload.processedRecords!]]></ee:set-payload>
					</ee:message>
				</ee:transform>
						<!-- <email:send config-ref="Gmail_SMTP" doc:name="Send migration result email" doc:id="5896eaa9-dd10-47a2-a6fc-6319b11dbd06" fromAddress="${mail.from}" subject="${mail.subject}">
					<email:to-addresses>
						<email:to-address value="${mail.to}" />
					</email:to-addresses>
				</email:send> -->
			</route>
		</scatter-gather>
			</batch:on-complete>
		</batch:job>
	</flow>
	<flow name="mainFlow" doc:id="7c0a5bef-b3d5-442f-bff3-10d038f69a5e" >
		<flow-ref doc:name="Trigger businessLogicFlow" doc:id="91360ede-4d71-44c7-9b64-8ee762e04ea0" name="businessLogicFlow"/>
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="488b507d-e26c-4c56-8759-8bb4f6645d71" type="ANY">
				<flow-ref doc:name="errorHandlingFlow" doc:id="afdaf73c-0137-4d60-84f6-5c41234771a3" name="errorHandlingFlow" />
			</on-error-propagate>
		</error-handler>
	</flow>
</mule>